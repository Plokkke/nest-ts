module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin', "import"],
  extends: [
    'plugin:@typescript-eslint/recommended',
  ],
  root: true,
  env: {
    node: true,
    jest: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    "array-bracket-spacing": [ "error", "always" ],
    "arrow-body-style": "off",
    "brace-style": [ "error", "1tbs", { "allowSingleLine": false } ],
    "callback-return": "error",
    "comma-dangle": [ "error", {
      "arrays": "always-multiline",
      "objects": "always-multiline",
      "imports": "always-multiline",
      "exports": "always-multiline",
      "functions": "always-multiline"
    } ],
    "consistent-return": [ "error", { "treatUndefinedAsUnspecified": false } ],
    "curly": [ "error", "all" ],
    "eqeqeq": [ "error", "always" ],
    "function-paren-newline": [ "error", "consistent" ],
    "import/order": ["error", {
      "newlines-between": "always",
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "pathGroups": [ {
        "pattern": "@/**",
        "group": "internal"
      }],
      "alphabetize": { "order": "asc", "caseInsensitive": true }
    }],
    "import/prefer-default-export": "off",
    "indent": [ "error", 2 ],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "max-len": "off",
    "new-cap": [ "error", { "capIsNew": false, "properties": false } ],
    "newline-per-chained-call": "off",
    "no-bitwise": [ "error", { "allow": [ "^=", "|=", "&=", "<<=", ">>=", ">>>=", "^", "~", "<<", ">>", ">>>" ] } ],
    "no-cond-assign": [ "error", "except-parens" ],
    "no-param-reassign": [ "error", { "props": false } ],
    "no-plusplus": [ "error", { "allowForLoopAfterthoughts": true } ],
    "no-return-assign": [ "error", "except-parens" ],
    "no-shadow": [ "error", { "builtinGlobals": false, "hoist": "functions", "ignoreOnInitialization": true } ],
    "no-underscore-dangle": [ "error", { "allowAfterThis": true } ],
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-useless-constructor": "off",
    "object-curly-newline": [ "error", { "consistent": true } ],
    "object-curly-spacing": [ "error", "always" ],
    "prefer-const": [ "error", { "destructuring": "all" } ],
    "prefer-destructuring": "off",
    "quotes": [ "error", "single" ],
    "radix": [ "error" ],
    "semi": [ "error", "always", { "omitLastInOneLineBlock": true} ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": [ "error" ],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-explicit-any": [ "error" ],
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unused-vars": [ "error", { "vars": "all", "args": "after-used", "ignoreRestSiblings": true } ],
    "@typescript-eslint/no-use-before-define": [ "error", { "classes": false, "functions": false, "ignoreTypeReferences": true } ]
  },
};
